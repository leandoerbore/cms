import { Menu, MenuProps } from "antd";
import Link from "next/link";

const Logo = () => {
    return (
        <>
            <svg className="log-svg" width="200" height="50" viewBox="0 0 91 23" fill="currentColor" xmlns="http://www.w3.org/2000/svg" data-qa="logo">
                <g clip-path="url(#clip0_69_5)">
                    <rect width="83" height="20" fill="transparent"></rect>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.92879 1.07609L1.3501 4.19561L1.28394 4.01367L9.86263 0.894146L9.92879 1.07609Z" fill="#07E897"></path>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M8.96685 13.8502L8.96685 5.83984L10.9302 5.83984L10.9302 13.8502L8.96685 13.8502Z" fill="#07E897"></path>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.9581 11.8733V7.81738H13.9214V11.8733H11.9581Z" fill="#07E897"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M6.02642 11.8733V7.81738H7.98975V11.8733H6.02642Z" fill="#07E897">
                    </path>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.98105 0L19.8596 3.69112V16.1984L9.97599 20L0 16.0966V3.68843L9.98105 0ZM2.01367 5.09105V14.7222L9.98223 17.8401L17.846 14.8154V5.08836L9.97717 2.1482L2.01367 5.09105Z" fill="#07E897"></path><path d="M35.9893 14.4169C35.8457 14.5894 35.6452 14.7596 35.3854 14.9275C35.1256 15.0955 34.8203 15.2478 34.4694 15.3821C34.1162 15.5165 33.7243 15.6285 33.289 15.7158C32.8538 15.8031 32.3889 15.8457 31.8922 15.8457C30.9443 15.8457 30.0852 15.7113 29.315 15.4403C28.5448 15.1694 27.8863 14.782 27.3417 14.2803C26.7971 13.7787 26.3732 13.1629 26.0702 12.4373C25.7671 11.7118 25.6167 10.8899 25.6167 9.96952C25.6167 9.11407 25.7648 8.33029 26.0633 7.61592C26.3618 6.90156 26.7834 6.28572 27.3348 5.76619C27.8863 5.24665 28.5494 4.84356 29.3241 4.55692C30.1011 4.27027 30.967 4.12695 31.9264 4.12695C32.8401 4.12695 33.6217 4.23892 34.2711 4.46062C34.9206 4.68232 35.4173 4.91298 35.7568 5.15035V7.97422C35.5814 7.72565 35.3626 7.48156 35.1051 7.24418C34.8454 7.00681 34.5537 6.79631 34.2301 6.61044C33.9043 6.42681 33.5465 6.27677 33.1569 6.1648C32.7649 6.05059 32.3548 5.9946 31.9264 5.9946C31.2997 5.9946 30.7323 6.09314 30.2242 6.28572C29.7183 6.48055 29.2877 6.75152 28.9367 7.09638C28.5835 7.44349 28.3147 7.86225 28.1278 8.35492C27.941 8.84759 27.8475 9.39176 27.8475 9.98743C27.8475 10.5383 27.9318 11.0556 28.1027 11.5371C28.2736 12.0186 28.5266 12.4373 28.8615 12.7956C29.1965 13.1517 29.6181 13.4361 30.1262 13.6488C30.6321 13.8593 31.2154 13.9713 31.8762 13.9825C32.3821 13.9825 32.847 13.9288 33.2708 13.819C33.6946 13.7115 34.0797 13.566 34.4261 13.3801C34.7724 13.1965 35.0778 12.9793 35.3421 12.7307C35.6064 12.4821 35.8206 12.2111 35.987 11.92V14.4169H35.9893Z" fill="currentColor"></path><path d="M40.2066 13.801H46.4843V15.6686H38.1421V4.30371H40.2066V13.801Z" fill="currentColor"></path><path d="M46.9949 9.96952C46.9949 9.11407 47.1407 8.33029 47.4324 7.61592C47.724 6.90156 48.1388 6.28572 48.6788 5.76619C49.2189 5.24665 49.8683 4.84356 50.6271 4.55692C51.3859 4.27027 52.2404 4.12695 53.1883 4.12695C54.1135 4.12695 54.9589 4.26132 55.7245 4.53228C56.4901 4.80325 57.1418 5.19066 57.6819 5.69229C58.2219 6.19615 58.6389 6.80974 58.9374 7.5353C59.2337 8.26087 59.3841 9.08272 59.3841 10.0031C59.3841 10.8586 59.2382 11.6423 58.9466 12.3567C58.6549 13.0711 58.2379 13.6869 57.7001 14.2064C57.1601 14.726 56.5084 15.1291 55.7427 15.4157C54.9771 15.7024 54.1271 15.8457 53.1906 15.8457C52.2655 15.8457 51.4201 15.7136 50.6544 15.4471C49.8888 15.1828 49.2371 14.7976 48.697 14.2938C48.157 13.7899 47.74 13.1741 47.4415 12.444C47.143 11.714 46.9949 10.8899 46.9949 9.96952ZM49.1756 9.9852C49.1756 10.5361 49.2599 11.0556 49.4308 11.5438C49.6017 12.0298 49.8569 12.453 50.1987 12.8091C50.5405 13.1651 50.9621 13.4495 51.4634 13.6623C51.9647 13.8728 52.5457 13.978 53.2066 13.978C53.8241 13.978 54.3755 13.8795 54.8654 13.6847C55.3554 13.4898 55.7746 13.2189 56.121 12.874C56.4674 12.5269 56.734 12.1081 56.9231 11.6155C57.1099 11.1228 57.2034 10.5786 57.2034 9.98296C57.2034 9.43207 57.1168 8.91253 56.9482 8.42434C56.7773 7.93839 56.522 7.51515 56.1802 7.15909C55.8384 6.80302 55.4169 6.51862 54.9156 6.30588C54.4143 6.09538 53.8332 5.99012 53.1724 5.99012C52.5549 5.99012 51.9989 6.08866 51.5044 6.28125C51.0099 6.47607 50.5884 6.74928 50.2397 7.10086C49.8934 7.45245 49.629 7.87121 49.4467 8.3594C49.2667 8.84982 49.1756 9.38952 49.1756 9.9852Z" fill="currentColor"></path><path d="M62.8587 11.0241C62.8587 11.5437 62.9339 11.9893 63.082 12.3633C63.2301 12.7373 63.4375 13.044 63.7018 13.2881C63.9661 13.5322 64.2806 13.7091 64.6429 13.8234C65.0052 13.9376 65.4017 13.9936 65.8324 13.9936C66.7028 13.9936 67.3773 13.7763 67.8558 13.3441C68.3344 12.9119 68.5736 12.202 68.5736 11.2167V4.30371H70.6381V11.0084C70.6381 11.8415 70.5242 12.5648 70.2986 13.1762C70.073 13.7875 69.7471 14.2936 69.3233 14.6945C68.8995 15.0953 68.3868 15.3909 67.7875 15.579C67.1882 15.7694 66.5068 15.8634 65.748 15.8634C64.9004 15.8634 64.1666 15.7515 63.5514 15.5298C62.9339 15.3081 62.4189 14.9923 62.0065 14.5803C61.594 14.1682 61.2887 13.6733 61.0904 13.0956C60.8922 12.5178 60.7942 11.8639 60.7942 11.1406V4.30371H62.8587V11.0241Z" fill="currentColor"></path><path d="M76.5087 4.30371C78.6552 4.30371 80.2526 4.77398 81.2985 5.71677C82.3444 6.65731 82.8685 8.00542 82.8685 9.75886C82.8685 10.7979 82.7113 11.6915 82.3968 12.4372C82.0824 13.1829 81.6426 13.7965 81.0752 14.2712C80.5078 14.7482 79.831 15.0998 79.0426 15.326C78.2542 15.5544 77.3928 15.6664 76.4586 15.6664H72.5278V4.30371H76.5087ZM76.4586 13.801C77.901 13.801 78.9697 13.4718 79.6624 12.8111C80.3551 12.1505 80.7038 11.1988 80.7038 9.95369C80.7038 8.68843 80.3642 7.74117 79.6875 7.1119C79.0107 6.48488 77.9397 6.17136 76.4745 6.17136H74.5923V13.801H76.4586Z" fill="currentColor"></path></g><defs><clipPath id="clip0_69_5"><rect width="83" height="20" fill="white"></rect></clipPath></defs>
            </svg>
        </>
    )
}

const MenuTabs = () => {
    type MenuItem = Required<MenuProps>['items'][number];

    function getItem(
        label: React.ReactNode,
        key: React.Key,
        icon?: React.ReactNode,
        children?: MenuItem[],
        type?: 'group',
    ): MenuItem {
        return {
            key,
            icon,
            children,
            label,
            type,
        } as MenuItem;
    }

    const items: MenuItem[] = [
        getItem('Redirects', '1', <Link href="/redirects"></Link>),
        getItem('Filemanager', '2', <Link href="/filemanager"></Link>),
        // getItem('Documents', '3', <Link href="/"></Link>),
        // getItem('Content', '4', <Link href="/"></Link>),
        // getItem('Partners', '5', <Link href="/"></Link>),
        // getItem('Footer', '6', <Link href="/"></Link>),
        // getItem('Header', '7', <Link href="/"></Link>),
    ]

    return (
        <>
            <div className="menu">
                <div className="logo-wrapper">
                    <Logo />
                </div>
                <Menu
                    style={{ width: 200 }}
                    defaultSelectedKeys={['1']}
                    items={items}
                    className="menu-wrapper"
                />
            </div>
        </>
    )
}

export { MenuTabs as Menu };